// ======================================================================== //
// Copyright 2009-2016 Intel Corporation                                    //
//                                                                          //
// Licensed under the Apache License, Version 2.0 (the "License");          //
// you may not use this file except in compliance with the License.         //
// You may obtain a copy of the License at                                  //
//                                                                          //
//     http://www.apache.org/licenses/LICENSE-2.0                           //
//                                                                          //
// Unless required by applicable law or agreed to in writing, software      //
// distributed under the License is distributed on an "AS IS" BASIS,        //
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. //
// See the License for the specific language governing permissions and      //
// limitations under the License.                                           //
// ======================================================================== //

#pragma once

#include "ospray/math/vec.ih"

struct Texture;

//! \brief Texture creation flags provided by the application
/*! \note Make sure these match the application-side definitions in ospray.h. */
typedef enum {
  OSP_TEXTURE_SHARED_BUFFER = (1<<0),
  OSP_TEXTURE_FILTER_NEAREST = (1<<1)
} Texture_CreationFlags;

//!\brief virtual function type for sampling a Texture (of any type)
/*! \note Accessing y, z, or a from the returned value is undefined if the
  texture has less than 4 channels */
typedef varying vec4f (*Texture__get)(const uniform Texture *uniform this, 
                                      const varying vec2f& p);

//! \brief Abstract base class for any type of (2D) texture
struct Texture 
{
  //! virtual function for sampling this texture
  Texture__get get;
};

//! constructor for 2D texture base class
inline void Texture__Constructor(uniform Texture* uniform self,
                                 uniform Texture__get get)
{
  self->get = get;
}
